"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostTransactionsWrapperToJSONTyped = exports.PostTransactionsWrapperToJSON = exports.PostTransactionsWrapperFromJSONTyped = exports.PostTransactionsWrapperFromJSON = exports.instanceOfPostTransactionsWrapper = void 0;
const NewTransaction_1 = require("./NewTransaction");
/**
 * Check if a given object implements the PostTransactionsWrapper interface.
 */
function instanceOfPostTransactionsWrapper(value) {
    return true;
}
exports.instanceOfPostTransactionsWrapper = instanceOfPostTransactionsWrapper;
function PostTransactionsWrapperFromJSON(json) {
    return PostTransactionsWrapperFromJSONTyped(json, false);
}
exports.PostTransactionsWrapperFromJSON = PostTransactionsWrapperFromJSON;
function PostTransactionsWrapperFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'transaction': json['transaction'] == null ? undefined : (0, NewTransaction_1.NewTransactionFromJSON)(json['transaction']),
        'transactions': json['transactions'] == null ? undefined : (json['transactions'].map(NewTransaction_1.NewTransactionFromJSON)),
    };
}
exports.PostTransactionsWrapperFromJSONTyped = PostTransactionsWrapperFromJSONTyped;
function PostTransactionsWrapperToJSON(json) {
    return PostTransactionsWrapperToJSONTyped(json, false);
}
exports.PostTransactionsWrapperToJSON = PostTransactionsWrapperToJSON;
function PostTransactionsWrapperToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'transaction': (0, NewTransaction_1.NewTransactionToJSON)(value['transaction']),
        'transactions': value['transactions'] == null ? undefined : (value['transactions'].map(NewTransaction_1.NewTransactionToJSON)),
    };
}
exports.PostTransactionsWrapperToJSONTyped = PostTransactionsWrapperToJSONTyped;
