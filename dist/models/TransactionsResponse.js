"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionsResponseToJSONTyped = exports.TransactionsResponseToJSON = exports.TransactionsResponseFromJSONTyped = exports.TransactionsResponseFromJSON = exports.instanceOfTransactionsResponse = void 0;
const TransactionsResponseData_1 = require("./TransactionsResponseData");
/**
 * Check if a given object implements the TransactionsResponse interface.
 */
function instanceOfTransactionsResponse(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    return true;
}
exports.instanceOfTransactionsResponse = instanceOfTransactionsResponse;
function TransactionsResponseFromJSON(json) {
    return TransactionsResponseFromJSONTyped(json, false);
}
exports.TransactionsResponseFromJSON = TransactionsResponseFromJSON;
function TransactionsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': (0, TransactionsResponseData_1.TransactionsResponseDataFromJSON)(json['data']),
    };
}
exports.TransactionsResponseFromJSONTyped = TransactionsResponseFromJSONTyped;
function TransactionsResponseToJSON(json) {
    return TransactionsResponseToJSONTyped(json, false);
}
exports.TransactionsResponseToJSON = TransactionsResponseToJSON;
function TransactionsResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'data': (0, TransactionsResponseData_1.TransactionsResponseDataToJSON)(value['data']),
    };
}
exports.TransactionsResponseToJSONTyped = TransactionsResponseToJSONTyped;
