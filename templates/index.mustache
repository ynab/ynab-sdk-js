{{! Original template source: https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/typescript-fetch/index.mustache }}
/* tslint:disable */

import * as apis from "./apis";
import { CustomTransactionsApi } from "./apis/CustomTransactionsApi";
import utils from "./utils";
import { BASE_PATH, Configuration } from "./runtime";

/* eslint-disable */
export * from "./runtime";
export * from "./apis";
export * from "./models";

export { api as API };
export { utils };

export class api {
  protected _configuration: Configuration;

  /**
   *
   * @param accessToken The access token used for authentication
   * @param endpointUrl The API endpoint URL (Optional)
   */
  public constructor(accessToken: string, endpointUrl: string = BASE_PATH) {
    this._configuration = new Configuration({
      accessToken,
      basePath: endpointUrl,
    });
  }

  protected _user: apis.UserApi;
  /**
   * /user endpoints interface
   */
  public get user(): apis.UserApi {
    if (!this._user) {
      this._user = new apis.UserApi(this._configuration);
    }
    return this._user;
  }

  protected _budgets: apis.BudgetsApi;
  /**
   * /budgets endpoints interface
   */
  public get budgets(): apis.BudgetsApi {
    if (!this._budgets) {
      this._budgets = new apis.BudgetsApi(this._configuration);
    }
    return this._budgets;
  }

  protected _accounts: apis.AccountsApi;
  /**
   * /budgets/{budget_id}/accounts endpoints interface
   */
  public get accounts(): apis.AccountsApi {
    if (!this._accounts) {
      this._accounts = new apis.AccountsApi(this._configuration);
    }
    return this._accounts;
  }

  protected _categories: apis.CategoriesApi;
  /**
   * /budgets/{budget_id}/categories endpoints interface
   */
  public get categories(): apis.CategoriesApi {
    if (!this._categories) {
      this._categories = new apis.CategoriesApi(this._configuration);
    }
    return this._categories;
  }

  protected _months: apis.MonthsApi;
  /**
   * /budgets/{budget_id}/months endpoints interface
   */
  public get months(): apis.MonthsApi {
    if (!this._months) {
      this._months = new apis.MonthsApi(this._configuration);
    }
    return this._months;
  }

  protected _payees: apis.PayeesApi;
  /**
   * /budgets/{budget_id}/payees endpoints interface
   */
  public get payees(): apis.PayeesApi {
    if (!this._payees) {
      this._payees = new apis.PayeesApi(this._configuration);
    }

    return this._payees;
  }

  protected _payeeLocations: apis.PayeeLocationsApi;
  /**
   * /budgets/{budget_id}/payee_locations endpoints interface
   */
  public get payeeLocations(): apis.PayeeLocationsApi {
    if (!this._payeeLocations) {
      this._payeeLocations = new apis.PayeeLocationsApi(this._configuration);
    }
    return this._payeeLocations;
  }

  protected _transactions: CustomTransactionsApi;
  /**
   * /budgets/{budget_id}/transactions endpoints interface
   */
  public get transactions(): CustomTransactionsApi {
    if (!this._transactions) {
      this._transactions = new CustomTransactionsApi(this._configuration);
    }
    return this._transactions;
  }

  protected _scheduledTransactions: apis.ScheduledTransactionsApi;
  /**
   * /budgets/{budget_id}/scheduled_transactions endpoints interface
   */
  public get scheduledTransactions(): apis.ScheduledTransactionsApi {
    if (!this._scheduledTransactions) {
      this._scheduledTransactions = new apis.ScheduledTransactionsApi(
        this._configuration
      );
    }
    return this._scheduledTransactions;
  }
}
