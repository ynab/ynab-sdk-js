/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BulkResponse,
  BulkTransactions,
  ErrorResponse,
} from '../models/index';
import {
    BulkResponseFromJSON,
    BulkResponseToJSON,
    BulkTransactionsFromJSON,
    BulkTransactionsToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models/index';

export interface BulkCreateTransactionsRequest {
    budgetId: string;
    transactions: BulkTransactions;
}

/**
 * 
 */
export class DeprecatedApi extends runtime.BaseAPI {

    /**
     * Creates multiple transactions.  Although this endpoint is still supported, it is recommended to use \'POST /budgets/{budget_id}/transactions\' to create multiple transactions.
     * Bulk create transactions
     */
    async bulkCreateTransactionsRaw(requestParameters: BulkCreateTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BulkResponse>> {
        if (requestParameters.budgetId === null || requestParameters.budgetId === undefined) {
            throw new runtime.RequiredError('budgetId','Required parameter requestParameters.budgetId was null or undefined when calling bulkCreateTransactions.');
        }

        if (requestParameters.transactions === null || requestParameters.transactions === undefined) {
            throw new runtime.RequiredError('transactions','Required parameter requestParameters.transactions was null or undefined when calling bulkCreateTransactions.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};
        headerParameters['Accept'] = 'application/json';

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/budgets/{budget_id}/transactions/bulk`.replace(`{${"budget_id"}}`, encodeURIComponent(String(requestParameters.budgetId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BulkTransactionsToJSON(requestParameters.transactions),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BulkResponseFromJSON(jsonValue));
    }

    /**
     * Creates multiple transactions.  Although this endpoint is still supported, it is recommended to use \'POST /budgets/{budget_id}/transactions\' to create multiple transactions.
     * Bulk create transactions
     */
    async bulkCreateTransactions(budgetId: string, transactions: BulkTransactions, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BulkResponse> {
        const response = await this.bulkCreateTransactionsRaw({ budgetId: budgetId, transactions: transactions }, initOverrides);
        return await response.value();
    }

}
