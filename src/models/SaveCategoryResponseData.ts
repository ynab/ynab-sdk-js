/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.70.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './Category';

/**
 * 
 * @export
 * @interface SaveCategoryResponseData
 */
export interface SaveCategoryResponseData {
    /**
     * 
     * @type {Category}
     * @memberof SaveCategoryResponseData
     */
    category: Category;
    /**
     * The knowledge of the server
     * @type {number}
     * @memberof SaveCategoryResponseData
     */
    server_knowledge: number;
}

/**
 * Check if a given object implements the SaveCategoryResponseData interface.
 */
export function instanceOfSaveCategoryResponseData(value: object): value is SaveCategoryResponseData {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('server_knowledge' in value) || value['server_knowledge'] === undefined) return false;
    return true;
}

export function SaveCategoryResponseDataFromJSON(json: any): SaveCategoryResponseData {
    return SaveCategoryResponseDataFromJSONTyped(json, false);
}

export function SaveCategoryResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveCategoryResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'category': CategoryFromJSON(json['category']),
        'server_knowledge': json['server_knowledge'],
    };
}

export function SaveCategoryResponseDataToJSON(value?: SaveCategoryResponseData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'category': CategoryToJSON(value['category']),
        'server_knowledge': value['server_knowledge'],
    };
}

