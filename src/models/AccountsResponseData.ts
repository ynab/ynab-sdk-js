/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Account } from './Account';
import {
    AccountFromJSON,
    AccountFromJSONTyped,
    AccountToJSON,
} from './Account';

/**
 * 
 * @export
 * @interface AccountsResponseData
 */
export interface AccountsResponseData {
    /**
     * 
     * @type {Array<Account>}
     * @memberof AccountsResponseData
     */
    accounts: Array<Account>;
    /**
     * The knowledge of the server
     * @type {number}
     * @memberof AccountsResponseData
     */
    server_knowledge: number;
}

/**
 * Check if a given object implements the AccountsResponseData interface.
 */
export function instanceOfAccountsResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accounts" in value;
    isInstance = isInstance && "server_knowledge" in value;

    return isInstance;
}

export function AccountsResponseDataFromJSON(json: any): AccountsResponseData {
    return AccountsResponseDataFromJSONTyped(json, false);
}

export function AccountsResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountsResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accounts': ((json['accounts'] as Array<any>).map(AccountFromJSON)),
        'server_knowledge': json['server_knowledge'],
    };
}

export function AccountsResponseDataToJSON(value?: AccountsResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accounts': ((value.accounts as Array<any>).map(AccountToJSON)),
        'server_knowledge': value.server_knowledge,
    };
}

