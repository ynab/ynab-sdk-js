/* tslint:disable */
/* eslint-disable */
/**
 * YNAB API Endpoints
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SaveTransaction } from './SaveTransaction';
import {
    SaveTransactionFromJSON,
    SaveTransactionFromJSONTyped,
    SaveTransactionToJSON,
} from './SaveTransaction';

/**
 * 
 * @export
 * @interface PostTransactionsWrapper
 */
export interface PostTransactionsWrapper {
    /**
     * 
     * @type {SaveTransaction}
     * @memberof PostTransactionsWrapper
     */
    transaction?: SaveTransaction;
    /**
     * 
     * @type {Array<SaveTransaction>}
     * @memberof PostTransactionsWrapper
     */
    transactions?: Array<SaveTransaction>;
}

/**
 * Check if a given object implements the PostTransactionsWrapper interface.
 */
export function instanceOfPostTransactionsWrapper(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostTransactionsWrapperFromJSON(json: any): PostTransactionsWrapper {
    return PostTransactionsWrapperFromJSONTyped(json, false);
}

export function PostTransactionsWrapperFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostTransactionsWrapper {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transaction': !exists(json, 'transaction') ? undefined : SaveTransactionFromJSON(json['transaction']),
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(SaveTransactionFromJSON)),
    };
}

export function PostTransactionsWrapperToJSON(value?: PostTransactionsWrapper | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transaction': SaveTransactionToJSON(value.transaction),
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(SaveTransactionToJSON)),
    };
}

